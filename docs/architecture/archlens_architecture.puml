@startuml
title ArchLens C# Project Architecture
skinparam linetype ortho
skinparam componentStyle rectangle
skinparam shadowing false
skinparam wrapWidth 220
skinparam maxMessageSize 200
skinparam nodesep 40
skinparam ranksep 75


package "ArchLens" {

  package "Presentation (CLI)" as Presentation {
    [--render_graph] as RenderAPI
  }

  package "Application Layer" as Application {
    [RenderService] as RenderService
    [DependencyGraphBuilder] as Builder
  }

  package "Domain Layer" as Domain{

    package "Factories" as Factories {
      [BaselineFactory] as BaselineFact
      [DependencyParserFactory] as DependencyParserFact
      [RendererFactory] as RendererFact
    }

    package "Interfaces" as Interfaces {
      [IBaselineManager] as IBaselineManager
      [IDependencyParser] as IDependencyParser
      [IRenderer] as IRenderer      
    }

    [ChangeDetector] as ChangeDetector
    [ConfigManager] as Config

    package "Models" as Models {
    }
  }

  package "Infrastructure Layer" as Infra{
    [CsharpDependencyParser] as CsharpDependencyParser
    [GitBaselineManager] as GitBase
    [JSONRenderer] as JSONRenderer
    [LocalBaselineManager] as LocalBase
  }
}

' --- Layout hints to stack layers (hidden edges) ---
Application -[hidden]down-> Domain
Domain      -[hidden]down-> Infra
Infra       -[hidden]up-> Domain


'== External integrations ==
cloud "Git Provider" as GitRemote
GitRemote -[dashed]u- GitBase

'== API -> Application ==
RenderAPI --> RenderService : render_graph(options)

'== Application to Application ==
RenderService -r-> Builder
RenderService --> Config : load(path)
RenderService --> Factories : resolve{baseline,depParser,renderer}

'== Application to Domain ==
RenderService --> ChangeDetector
Builder --> IDependencyParser

'== Domain to Domain ==
BaselineFact --> IBaselineManager
DependencyParserFact --> IDependencyParser
RendererFact --> IRenderer

Interfaces -l-> Models
ChangeDetector --> Models
Config --> Models

'== Domain to Infra ==
IDependencyParser <|-- CsharpDependencyParser

IRenderer <|-- JSONRenderer 

IBaselineManager <|-- GitBase
IBaselineManager <|-- LocalBase

@enduml
